!function(e){var t={};function r(n){if(t[n])return t[n].exports;var s=t[n]={i:n,l:!1,exports:{}};return e[n].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r.w={},r(r.s=17)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(7);class s extends Error{constructor(e,t=""){super(),this.name=this.constructor.name,this.code=e,this.message=`${e}: ${t}`}}t.SigError=s,t.ERR_KEY=4741,t.ERR_NO_KEY=4742,t.ERR_HEARTBEAT=4743,t.ERR_MESSAGE=4744,t.ERR_BLOCKING_MEMBER=4745;const o=512;t.validateKey=function(e){if(""===e)throw new s(t.ERR_KEY,`The key ${e} is an empty string`);if(e.length>o)throw new s(t.ERR_KEY,`The key length exceeds the limit of ${o} characters`)},t.generateId=function e(t){const r=n.randomBytes(4).readUInt32BE(0,!0);return t.has(r)?e(t):r}},function(e,t){e.exports=require("http")},function(e,t){e.exports=require("https")},function(e,t){e.exports=require("fs")},function(e){e.exports={name:"sigver",description:"WebRTC signaling server based on WebSocket",version:"0.0.0-development",main:"dist/server.js",bin:{sigver:"dist/server.js"},files:["dist/"],engines:{node:">=8.1.4"},scripts:{dev:"nodemon -e ts -w ./src -x ts-node ./src/index.ts -- --port 8010 | bunyan",lint:"tslint --fix -p tsconfig.json && prettier --write --list-different src/**/*.ts test/**/*.{js} ./*.{ts,js,json,md} && markdownlint ./*.md",build:"npm run proto && webpack",proto:"pbjs -t static-module --no-verify --no-delimited --no-convert -o src/proto/index.js src/proto/index.proto && pbts src/proto/index.js -o src/proto/index.d.ts",pretest:"npm run build && pm2 gracefulReload process.yml",test:"karma start karma.conf.js","test:chrome":"npm run test -- --browsers Chrome",precommit:"lint-staged && npm test -- --no-auto-watch --single-run",commitmsg:"validate-commit-msg",cz:"git-cz","semantic-release":"semantic-release"},keywords:["WebRTC","WebSocket","Server-Sent-Event","signaling","server"],author:"Philippe Kalitine <philippe.kalitine@gmail.com> (http://philippe.kalitine.name/)",license:"MIT",repository:{type:"git",url:"https://github.com/coast-team/sigver.git"},dependencies:{bunyan:"^1.8.12",commander:"^2.13.0",protobufjs:"^6.8.5",rxjs:"^6.0.0",uws:"^9.148.0"},devDependencies:{"@types/bunyan":"^1.8.4","@types/commander":"^2.12.2","@types/uws":"^0.13.1",commitizen:"^2.5.0","cz-conventional-changelog":"^2.1.0",husky:"^0.14.3",jasmine:"^3.0.0","jasmine-spec-reporter":"^4.2.1",karma:"^2.0.2","karma-chrome-launcher":"^2.1.1","karma-firefox-launcher":"^1.1.0","karma-jasmine":"^1.1.1","karma-rollup-preprocessor":"^6.0.0","karma-spec-reporter":"0.0.32","lint-staged":"^7.0.5","markdownlint-cli":"^0.8.1",nodemon:"^1.17.3",pm2:"^2.10.3",prettier:"^1.12.1","semantic-release":"^15.1.7","ts-loader":"^4.2.0","ts-node":"^6.0.2",tslint:"^5.9.1","tslint-config-prettier":"^1.12.0",typescript:"^2.8.3","validate-commit-msg":"^2.14.0",webpack:"^4.6.0","webpack-cli":"^2.0.15","webpack-node-externals":"^1.7.2"},config:{commitizen:{path:"node_modules/cz-conventional-changelog"}},"lint-staged":{linters:{"*.md":["prettier --write --list-different","git add","markdownlint"],"*.ts":["tslint --fix -p tsconfig.json -e","git add"],"*.{ts,json,scss,css}":["prettier --write --list-different","git add"]},concurrent:!1}}},function(e,t){e.exports=require("protobufjs/minimal")},function(e,t,r){var n,s,o;s=[r(5)],void 0===(o="function"==typeof(n=function(e){"use strict";var t=e.Reader,r=e.Writer,n=e.util,s=e.roots.default||(e.roots.default={});return s.Message=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}var o;return e.prototype.heartbeat=!1,e.prototype.content=null,e.prototype.connect=null,e.prototype.connected=!1,Object.defineProperty(e.prototype,"type",{get:n.oneOfGetter(o=["heartbeat","content","connect","connected"]),set:n.oneOfSetter(o)}),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=r.create()),null!=e.heartbeat&&e.hasOwnProperty("heartbeat")&&t.uint32(8).bool(e.heartbeat),null!=e.content&&e.hasOwnProperty("content")&&s.Content.encode(e.content,t.uint32(18).fork()).ldelim(),null!=e.connect&&e.hasOwnProperty("connect")&&s.GroupData.encode(e.connect,t.uint32(26).fork()).ldelim(),null!=e.connected&&e.hasOwnProperty("connected")&&t.uint32(32).bool(e.connected),t},e.decode=function(e,r){e instanceof t||(e=t.create(e));for(var n=void 0===r?e.len:e.pos+r,o=new s.Message;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:o.heartbeat=e.bool();break;case 2:o.content=s.Content.decode(e,e.uint32());break;case 3:o.connect=s.GroupData.decode(e,e.uint32());break;case 4:o.connected=e.bool();break;default:e.skipType(7&i)}}return o},e}(),s.Content=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.id=0,e.prototype.unsubscribe=!1,e.prototype.data=n.newBuffer([]),e.create=function(t){return new e(t)},e.encode=function(e,t){return t||(t=r.create()),null!=e.id&&e.hasOwnProperty("id")&&t.uint32(8).uint32(e.id),null!=e.unsubscribe&&e.hasOwnProperty("unsubscribe")&&t.uint32(16).bool(e.unsubscribe),null!=e.data&&e.hasOwnProperty("data")&&t.uint32(26).bytes(e.data),t},e.decode=function(e,r){e instanceof t||(e=t.create(e));for(var n=void 0===r?e.len:e.pos+r,o=new s.Content;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:o.id=e.uint32();break;case 2:o.unsubscribe=e.bool();break;case 3:o.data=e.bytes();break;default:e.skipType(7&i)}}return o},e}(),s.GroupData=function(){function e(e){if(this.members=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.id=0,e.prototype.members=n.emptyArray,e.create=function(t){return new e(t)},e.encode=function(e,t){if(t||(t=r.create()),null!=e.id&&e.hasOwnProperty("id")&&t.uint32(8).uint32(e.id),null!=e.members&&e.members.length){t.uint32(18).fork();for(var n=0;n<e.members.length;++n)t.uint32(e.members[n]);t.ldelim()}return t},e.decode=function(e,r){e instanceof t||(e=t.create(e));for(var n=void 0===r?e.len:e.pos+r,o=new s.GroupData;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:o.id=e.uint32();break;case 2:if(o.members&&o.members.length||(o.members=[]),2==(7&i))for(var c=e.uint32()+e.pos;e.pos<c;)o.members.push(e.uint32());else o.members.push(e.uint32());break;default:e.skipType(7&i)}}return o},e}(),s})?n.apply(t,s):n)||(e.exports=o)},function(e,t){e.exports=require("crypto")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(0),s=new Map;t.isAGroupMember=function(e,t,r,i){const c=e.group||s.get(i)||new o(i);if(e.group){if(1===c.size||c.hasMembersInCommon(r))return!0;c.removeMember(e)}else{if(0===c.size)return c.addMember(e,t),!0;if(1===c.size){const r=c.getFirstMember();if(e.triedMembers.includes(r.id))return c.addMember(e,t),c.removeMember(r),r.close(n.ERR_BLOCKING_MEMBER,"replaced by a peer as prevents him from joining the group"),!0}}return e.bindWith(c.selectMemberFor(e)),!1};class o{constructor(e){this.key=e,this.members=new Set}get size(){return this.members.size}getFirstMember(){return this.members.values().next().value}hasMembersInCommon(e){for(const t of this.members)if(e.includes(t.id))return!0;return!1}addMember(e,t){return e.group=this,e.triedMembers=[],e.id=t,this.members.add(e),!0}removeMember(e){e.group=void 0,this.members.delete(e),0===this.size&&s.delete(this.key)}selectMemberFor(e){const t=[];return this.members.forEach(r=>{e.triedMembers.includes(r.id)||t.push(r)}),0!==t.length?t[0]:(e.triedMembers=[],this.selectMemberFor(e))}}t.Group=o},function(e,t){e.exports=require("rxjs/operators")},function(e,t){e.exports=require("rxjs")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(10),s=r(9),o=r(8),i=r(6),c=r(0),a=3,u=5e3,l=new Set,d=i.Message.encode(i.Message.create({heartbeat:!0})).finish(),p=i.Message.encode(i.Message.create({connected:!0})).finish(),m=i.Message.encode(i.Message.create({connected:!1})).finish();t.Peer=class extends n.Subject{constructor(e,t,r){super(),this.triedMembers=[],this.id=c.generateId(l),this.closeFunc=r,this.sendFunc=t,this.subscribe(r=>{switch(r.type){case"connect":{const{id:n,members:s}=r.connect;o.isAGroupMember(this,n,s,e)?t(p):t(m);break}case"heartbeat":n=0}});let n=0;this.heartbeatInterval=setInterval(()=>{++n>=a&&(clearInterval(this.heartbeatInterval),this.close(c.ERR_HEARTBEAT,"Too many missed hearbeats")),t(d)},u)}send(e){this.sendFunc(i.Message.encode(i.Message.create(e)).finish())}close(e,t){this.closeFunc(e,t)}onMessage(e){try{this.next(i.Message.decode(new Uint8Array(e)))}catch(e){log.error(e),this.close(c.ERR_MESSAGE,e.message)}}onClose(e,t){clearInterval(this.heartbeatInterval),void 0!==this.group&&this.group.removeMember(this),this.complete(),l.delete(this.id),1e3!==e&&log.info("Connection with peer has closed",{id:this.id,code:e,reason:t})}bindWith(e){this.subToMember&&this.subToMember.unsubscribe(),this.subToJoining&&this.subToJoining.unsubscribe(),this.id=c.generateId(l),this.triedMembers.push(e.id),this.subToMember=e.pipe(s.filter(({content:e})=>!!e&&e.id===this.id),s.pluck("content")).subscribe(({unsubscribe:e,data:t})=>{this.send({content:{id:1,data:t}}),e&&this.subToMember&&this.subToMember.unsubscribe()},()=>this.send({content:{id:1}}),()=>this.send({content:{id:1}})),this.subToJoining=this.pipe(s.filter(({content:e})=>!!e),s.pluck("content")).subscribe(({unsubscribe:t,data:r})=>{e.send({content:{id:this.id,data:r}}),t&&this.subToJoining&&this.subToJoining.unsubscribe()},()=>e.send({content:{id:this.id}}),()=>e.send({content:{id:this.id}}))}}},function(e,t){e.exports=require("uws")},function(e,t){e.exports=require("url")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(13),s=r(12),o=r(11),i=r(0);t.setupWebSocketServer=function(e){const t=new s.Server({perMessageDeflate:!1,server:e});return t.on("error",e=>log.fatal("WebSocketServer error",e)),t.on("connection",e=>{try{const t=function(e){const t=void 0!==e?n.parse(e,!0).pathname:void 0;if(!t)throw new i.SigError(i.ERR_NO_KEY,"Could not get the key: the URL is undefined");return t.substr(1)}(e.upgradeReq.url);i.validateKey(t);const r=new o.Peer(t,t=>{try{e.send(t,{binary:!0})}catch(t){log.error("Close socket",t),e.close(i.ERR_MESSAGE,t.message)}},(t,r)=>e.close(t,r));e.onmessage=(({data:e})=>r.onMessage(e)),e.onerror=(e=>r.error(e)),e.onclose=(e=>r.onClose(e.code,e.reason))}catch(t){log.error("Close socket: ",t),e.close(t.code,t.message)}}),t}},function(e,t){e.exports=require("commander")},function(e,t){e.exports=require("bunyan")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=r(16),s=r(15),o=r(14);let i;try{i=r(4).version}catch(e){log.error(e),i=""}global.log=n.createLogger({name:"sigver",level:"trace"});const c="0.0.0.0",a=8e3;s.version(i).description("Signaling server for WebRTC. Used by Netflux API (https://coast-team.github.io/netflux/)").option("-h, --host <ip>","Select host address to bind to",c).option("-p, --port <number>","Select port to use",a).option("-k, --key <file path>","Private key for the certificate.").option("-c, --cert <file path>","The server certificate.").option("-a, --ca <file path>","The additional intermediate certificate or certificates that web browsers will need in order to validate the server certificate.").on("--help",()=>{console.log("\n  Examples:\n\n    $ sigver                       # Signaling server is listening on 0.0.0.0:8000\n    $ sigver -h 192.168.0.1 -p 80  # Signaling server is listening on 192.168.0.1:80\n    $ sigver --key ./private.key --cert ./primary.crt --ca ./intermediate.crt --port 443  # Signaling server is listening on 0.0.0.0:443")}).parse(process.argv);const{host:u,port:l,key:d,cert:p,ca:m}=s;let b;if(d&&p&&m){const e=r(3);b=r(2).createServer({key:e.readFileSync(d),cert:e.readFileSync(p),ca:e.readFileSync(m)})}else b=r(1).createServer();o.setupWebSocketServer(b),b.on("clientError",(e,t)=>{log.error("Client error: ",e),t.end()}),b.listen(l,u,()=>{const e=b.address();log.info(`Signaling server is listening on ${e.address}:${e.port}`)})}]);